const canvas=document.getElementById("canvas"),ctx=canvas.getContext("2d");let circleLimit,popRadius,circleRadiusMult,circleSpeedDiv,circleRadiusMin,circleRadiusMax,lightRadius;function updateScreenVars(){window.innerWidth<768||window.innerHeight<550?(circleLimit=8,popRadius=5,circleSpeedDiv=400,circleRadiusMin=10,circleRadiusMult=10,circleRadiusMax=circleRadiusMult+circleRadiusMin,lightRadius=500):(circleLimit=14,popRadius=10,circleSpeedDiv=300,circleRadiusMin=10,circleRadiusMult=30,circleRadiusMax=circleRadiusMult+circleRadiusMin,lightRadius=900)}updateScreenVars();const currentSpawnMode="top",light={x:null,y:null},globalDirection={vx:.2,vy:.8},colors=["#eb3b42","#ff9101","#fecb1c","#60c774","#02aeda","#5d5ccc"];function updateLightPosition(){const i=document.getElementById("canvas_light").getBoundingClientRect();light.x=i.left+i.width/1.55,light.y=i.top+i.height/1.6+window.scrollY}function resize(){updateScreenVars();const i=canvas.getBoundingClientRect();canvas.width=i.width,canvas.height=i.height,updateLightPosition()}function drawLight(){ctx.beginPath(),ctx.arc(light.x,light.y,1e4,0,2*Math.PI);let i=ctx.createRadialGradient(light.x,light.y,0,light.x,light.y,lightRadius);i.addColorStop(0,"#1f4165"),i.addColorStop(1,"#122a4c"),ctx.fillStyle=i,ctx.fill()}function Circle(i="def"){this.colorIndex=Math.floor(Math.random()*colors.length),this.frame=0,this.colorTransition=0,this.directionOverride=null,this.directionOverrideFrames=0,this.vx=(Math.random()-.5)/2,this.vy=(Math.random()-.5)/2,this.radius=Math.floor(Math.random()*circleRadiusMult+circleRadiusMin),this.shadow_length=2e3,"def"===i?(this.x=Math.floor(Math.random()*canvas.width+1),this.y=Math.floor(Math.random()*canvas.height+1)):"top"===i?(this.x=Math.floor(Math.random()*canvas.width+1),this.y=-Math.floor(50*Math.random()+2*circleRadiusMax)):"left"===i&&(this.x=-Math.floor(50*Math.random()+2*circleRadiusMax),this.y=Math.floor(.5*Math.random()*canvas.height+1)),this.rotate=function(){const i=(60-this.radius)/circleSpeedDiv;let t;if(this.directionOverride){const i=this.directionOverrideFrames/100;t={vx:this.directionOverride.vx*i+globalDirection.vx*(1-i),vy:this.directionOverride.vy*i+globalDirection.vy*(1-i)}}else t=globalDirection;if(this.x+=t.vx*i,this.y+=t.vy*i,this.directionOverride&&(this.directionOverrideFrames--,this.directionOverrideFrames<=0&&(this.directionOverride=null)),this.y-this.radius>canvas.height)for(circles.splice(circles.indexOf(this),1);circles.length<circleLimit;)circles.push(new Circle(currentSpawnMode));if(this.x-this.radius>canvas.width)for(circles.splice(circles.indexOf(this),1);circles.length<circleLimit;)circles.push(new Circle("left"));this.frame++,this.frame%200==0?(this.colorIndex=(this.colorIndex+1)%colors.length,this.colorTransition=0):this.colorTransition+=.005};this.draw=function(){if(this.radius>0){const i=ctx.lineWidth;ctx.beginPath(),ctx.arc(this.x,this.y,this.radius,0,2*Math.PI);const t=hexToRgb(colors[this.colorIndex]),c=hexToRgb(colors[(this.colorIndex+1)%colors.length]);ctx.fillStyle=lerpColor(t,c,this.colorTransition),ctx.fill(),ctx.strokeStyle="#000000",ctx.lineWidth=2,ctx.stroke(),ctx.lineWidth=i}},this.drawShadow=function(){const i=Math.atan2(light.y-this.y,light.x-this.x),t=this.x+this.shadow_length*Math.sin(-i-Math.PI/2),c=this.y+this.shadow_length*Math.cos(-i-Math.PI/2);ctx.beginPath(),ctx.moveTo(this.x,this.y),ctx.lineTo(t,c),ctx.lineWidth=2*this.radius+2,ctx.strokeStyle="#122a4c",ctx.stroke()},this.pop=function(){for(let i=0;i<10;i++)particles.push(new Particle(this.x,this.y))}}function Particle(i,t){this.x=i,this.y=t,this.vx=2*Math.random()-1,this.vy=2*Math.random()-1,this.radius=5*Math.random()+2,this.lifespan=100,this.update=function(){this.x+=this.vx,this.y+=this.vy,this.radius-=.1,this.lifespan--},this.draw=function(){this.radius>0&&(ctx.beginPath(),ctx.arc(this.x,this.y,this.radius,0,2*Math.PI),ctx.fillStyle="#fff",ctx.fill())}}const circles=[],particles=[];function draw(){let i;for(ctx.clearRect(0,0,canvas.width,canvas.height),drawLight(),circles.forEach((i=>{i.rotate(),i.drawShadow()})),i=0;i<circles.length;i++)collisionDetection(i),circles[i]&&circles[i].draw();particles.forEach(((i,t)=>{i.update(),i.draw(),i.lifespan<=0&&particles.splice(t,1)})),requestAnimationFrame(draw)}for(resize(),draw();circles.length<circleLimit;)circles.push(new Circle);function collisionDetection(i){for(let t=circles.length-1;t>=0;t--)if(circles[t]&&circles[i]&&t!==i){const c=circles[i].x-circles[t].x,e=circles[i].y-circles[t].y,r=Math.sqrt(c*c+e*e);if(r<circles[i].radius+circles[t].radius){circles[i].radius=circles[i].radius>1?circles[i].radius-=1:1,circles[t].radius=circles[t].radius>1?circles[t].radius-=1:1;let s=c/r,l=e/r;circles[t]&&circles[t].radius<popRadius?(circles[t].pop(),circles.splice(t,1),circles.push(new Circle(currentSpawnMode))):circles[t]&&(circles[t].vx=-s,circles[t].vy=-l,circles[t].directionOverride={vx:-s,vy:-l},circles[t].directionOverrideFrames=100),circles[i]&&circles[i].radius<popRadius?(circles[i].pop(),circles.splice(i,1),circles.push(new Circle(currentSpawnMode))):circles[i]&&(circles[i].vx=s,circles[i].vy=l,circles[i].directionOverride={vx:s,vy:l},circles[i].directionOverrideFrames=100)}}}function hexToRgb(i){const t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(i);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null}function lerpColor(i,t,c){const e=i.r,r=i.g,s=i.b;return`rgb(${e+c*(t.r-e)}, ${r+c*(t.g-r)}, ${s+c*(t.b-s)})`}window.onresize=resize,window.addEventListener("scroll",(function(){updateLightPosition()}));